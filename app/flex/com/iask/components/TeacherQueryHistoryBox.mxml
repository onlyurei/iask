<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" label="解答记录    ">
	<mx:Script>
		<![CDATA[
			import com.iask.model.Query;
			import com.iask.model.IaskModelLocator;
			import mx.collections.ArrayCollection;
			import com.iask.control.EventNames;
			import com.iask.util.CairngormUtils;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.core.Application;
			import mx.managers.PopUpManager;
			import mx.core.IFlexDisplayObject;
			
			[Bindable]
			private var _model:IaskModelLocator = IaskModelLocator.getInstance();
			
			[Bindable]
			private var _idleLabel:String = "请在左边提问列表选择一个提问";
			
			[Bindable]
			private var _unresponsedLabel:String = "";
			
			[Bindable]
			private var _answerButtonLabel:String;
			
			private var _answerButtonState:String = "disabled";
		
			private function selectAll():void
			{
				answerTI.textArea.selectionBeginIndex = 0;
				answerTI.textArea.selectionEndIndex = answerTI.text.length;
				answerTI.showControlBar = true;
			}
		
			private function getRowNum(oItem:Object,iCol:int):String
    		{
    			var index:int = (queriesDG.dataProvider as ArrayCollection).getItemIndex(oItem) + 1;
    			return index.toString();
    		}
    		
    		private function labelToShow(item:Object, column:DataGridColumn):String
			{
				return item.studentLastName + " " + item.studentFirstName;
			}
			
			private function updateFilterFunction():void
			{
				switch (choiceCB.selectedItem.data)
				{
					case _model.RESPONSED_QUERIES:
						_model.queriesFilterName == "responsed";
						_model.selectedQueriesFilter = _model.SHOW_CHOICES[0];
						if (_model.unsolvedQueries == null)
						{
							CairngormUtils.dispatchEvent(EventNames.LIST_UNSOLVED_QUERIES);
						}
						else
						{
							_model.queries = _model.unsolvedQueries;
							if (_model.queries.filterFunction != _model.responsedQueriesFilterFunc)
							{
								_model.queries.filterFunction = _model.responsedQueriesFilterFunc;
								_model.queries.refresh();
							}
						}
						break;
					case _model.UNRESPONSED_QUERIES:
						_model.queriesFilterName == "unresponsed";
						_model.selectedQueriesFilter = _model.SHOW_CHOICES[1];
						if (_model.unsolvedQueries == null)
						{
							CairngormUtils.dispatchEvent(EventNames.LIST_UNSOLVED_QUERIES);
						}
						else
						{
							_model.queries = _model.unsolvedQueries;
							if (_model.queries.filterFunction != _model.unresponsedQueriesFilterFunc)
							{
								_model.queries.filterFunction = _model.unresponsedQueriesFilterFunc;
								_model.queries.refresh();
							}
						}
						break;
					case _model.SOLVED_QUERIES:
						_model.queriesFilterName == "solved";
						_model.selectedQueriesFilter = _model.SHOW_CHOICES[2];
						if (_model.solvedQueries == null)
						{
							CairngormUtils.dispatchEvent(EventNames.LIST_SOLVED_QUERIES);
						}
						else
						{
							_model.queries = _model.solvedQueries;
						}
						break;
					case _model.ALL_QUERIES:
						_model.queriesFilterName == "all";
						_model.selectedQueriesFilter = _model.SHOW_CHOICES[3];
						if (_model.allQueries == null)
						{
							CairngormUtils.dispatchEvent(EventNames.LIST_QUERIES);
						}
						else
						{
							_model.queries = _model.allQueries;
						}
						break;
					default:
						break;
				}
			}
			
			private function refreshQueries():void
			{
				CairngormUtils.dispatchEvent(EventNames.LIST_UNSOLVED_QUERIES);
				CairngormUtils.dispatchEvent(EventNames.LIST_QUERIES);
				_model.queriesFilterName = "all";
			}
			
			private function handleQueriesDGChange():void
			{
				if (queriesDG.selectedItem == null)
				{
					_answerButtonLabel = "请在左边提问列表选择一个提问";
					_answerButtonState = "disabled";
					answerTI.htmlText = "";
				}
				else if ((queriesDG.selectedItem.answer == "" || queriesDG.selectedItem.answer == null) && !queriesDG.selectedItem.solved)
				{
					_answerButtonLabel = "提交解答";
					answerTI.textArea.editable = true;
					_answerButtonState = "update";
				}
				else if (queriesDG.selectedItem.answer != "" && queriesDG.selectedItem.answer != null && !queriesDG.selectedItem.solved)
				{
					_answerButtonLabel = "此解答还没有被提问学生确认，您可在上面解答框修改，并点此按钮提交";
					answerTI.textArea.editable = true;
					_answerButtonState = "update";
				}
				else if (queriesDG.selectedItem.solved)
				{
					_answerButtonLabel = "此问题已经被解决";
					answerTI.textArea.editable = false;
					_answerButtonState = "disabled";
				}
			}
			
			private function handleDeleteQueryButtonClick():void
    		{
    			Alert.show("您确定要删除这一提问吗？删除后提问学生也将看不到这个提问和对应解答（本操作不可撤销）", 
					"确认删除提问", Alert.NO|Alert.YES, this, handleAlertClick, null, Alert.NO);
    		}
    		
    		private function handleAlertClick(event:CloseEvent):void
			{
				if (event.detail == Alert.YES)
				{
					var query:Query = Query(queriesDG.selectedItem);
					CairngormUtils.dispatchEvent(EventNames.DESTROY_QUERY, query);
				}
			}
			
			private function updateQuery():void
			{
				var query:Query = Query(queriesDG.selectedItem);
				if (answerTI.text == "")
				{
					Alert.show("请输入解答内容。", "更新提问失败");
					return;
				}
				query.answer = answerTI.htmlText;
				CairngormUtils.dispatchEvent(EventNames.UPDATE_QUERY, query);
			}
			
			private function createEntry():void
			{
				Application.application.teacherMainBox.entrySubmitTab.questionTI.text = questionTI.text;
				Application.application.teacherMainBox.entrySubmitTab.answerTI.htmlText = answerTI.htmlText;
				_model.mainBoxTabState = IaskModelLocator.VIEWING_TEACHER_MAIN_BOX_ENTRY_SUBMIT_TAB;
			}
			
			private function popUpDetailBox():void
    		{
    			var detailWindow:IFlexDisplayObject = PopUpManager.createPopUp(Application.application.mainStack, ViewDetailBox);
    			PopUpManager.centerPopUp(detailWindow);
    			var detailComponent:ViewDetailBox = ViewDetailBox(detailWindow);
    			detailComponent.title = queriesDG.selectedItem.question;
    			detailComponent.detailTI.htmlText = queriesDG.selectedItem.answer;
    		}
		]]>
	</mx:Script>
	<mx:HDividedBox width="100%" height="100%">
		<mx:VBox width="42%" height="100%">
			<mx:HBox width="100%" verticalAlign="middle">
				<mx:Text text="查看："/>
				<mx:ComboBox id="choiceCB" dataProvider="{_model.SHOW_CHOICES}" rowCount="20" width="100%"
				    change="updateFilterFunction()" selectedItem = "{_model.selectedQueriesFilter}"/>
				<mx:Button id="refreshQueriesButton" click="refreshQueries()" label="刷新" height="20" width="50"/>
			</mx:HBox>
			<mx:DataGrid id="queriesDG" dataProvider="{_model.queries}" width="100%" height="100%" 
				change="handleQueriesDGChange()" rowHeight="24" doubleClickEnabled="{queriesDG.selectedItem != null}" 
				doubleClick="popUpDetailBox()">
				<mx:columns>
					<mx:DataGridColumn labelFunction="getRowNum" width="23" editable="false"
						sortable="false" draggable="false" textAlign="center"
						paddingLeft="0" paddingRight="0"/>
					<mx:DataGridColumn headerText="课程" dataField="courseName" width="90"/>
					<mx:DataGridColumn headerText="问题" dataField="question"/>
					<mx:DataGridColumn headerText="提问者" dataField="studentLastName" labelFunction="labelToShow" 
						width="60"/>
				</mx:columns>
			</mx:DataGrid>
		</mx:VBox>
		<mx:VDividedBox width="58%" height="100%">
			<mx:VBox width="100%" height="30%">
				<mx:Text text="此问题属于课程“{queriesDG.selectedItem.courseName}”"/>
				<mx:TextArea id="questionTI" width="100%" height="100%" enabled="{queriesDG.selectedItem != null}"
				    text="{queriesDG.selectedItem.question}" editable="false"/>
				<mx:HBox width="100%">
					<mx:Text text="提问者：{queriesDG.selectedItem.studentLastName}{queriesDG.selectedItem.studentFirstName} (学号：{queriesDG.selectedItem.studentOfficialId})"/>
					<mx:Spacer width="100%"/>
					<mx:Button id="createEntryButton" height="20" textRollOverColor="#33eeff" click="createEntry()" label="将此解答加入课程问题库..." 
						enabled="{(queriesDG.selectedItem == null || queriesDG.selectedItem.answer == null || queriesDG.selectedItem.answer == '') ? false : true}"/>
					<mx:Button id="deleteButton" width="60" height="20" textRollOverColor="#ff0000" 
						click="handleDeleteQueryButtonClick()" label="删除"
						enabled="{queriesDG.selectedItem != null}"/>
				</mx:HBox>
			</mx:VBox>
			<mx:VBox width="100%" height="70%">
				<mx:RichTextEditor id="answerTI" title="解答" width="100%" height="100%" enabled="{questionTI.enabled}" 
					focusIn="answerTI.showControlBar = true;" focusOut="answerTI.showControlBar = false;"
				    htmlText="{(queriesDG.selectedItem.answer == '' || queriesDG.selectedItem.answer == null) ? _unresponsedLabel : queriesDG.selectedItem.answer}"
				    doubleClickEnabled="{queriesDG.selectedItem != null}" doubleClick="popUpDetailBox()"/>
				<mx:HBox width="100%">
					<mx:Button id="answerButton" width="100%" label="{queriesDG.selectedItem == null ? _idleLabel  : _answerButtonLabel}" 
						click="updateQuery()" enabled="{(queriesDG.selectedItem == null || queriesDG.selectedItem.solved) ? false : true}"/>
				</mx:HBox>
			</mx:VBox>
		</mx:VDividedBox>
	</mx:HDividedBox>
</mx:VBox>
