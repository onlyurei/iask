<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" width="350" height="580" xmlns:cpv="com.iask.validators.*"
	title="新建用户" showCloseButton="true" close="handleTitleWindowClose(event)" horizontalAlign="center">
	<mx:Script>
		<![CDATA[
			import com.iask.validators.ServerErrors;
			import mx.controls.Alert;
			import mx.events.ValidationResultEvent;
			import mx.validators.Validator;
			import com.iask.control.EventNames;
			import com.iask.model.IaskModelLocator;
			import com.iask.model.User;
			import com.iask.util.CairngormUtils;
			import mx.managers.CursorManager;
			import mx.events.CloseEvent;
            import mx.managers.PopUpManager;
			
			[Bindable]
			private var _model:IaskModelLocator = IaskModelLocator.getInstance();
			
			private function handleTitleWindowClose(evt:CloseEvent):void 
            {
                PopUpManager.removePopUp(this);
            }
			
			private function validateAndSubmit():void
			{
				if (batchCB.selected)
				{
					if (startTI.text == "" || endTI.text == "")
					{
						Alert.show("起始和终止学工号都必须输入。\n例如：\n起始学工号：040648\n终止学工号：040699", "批量创建用户失败");
						return;
					}
					if (startTI.text.length != endTI.text.length)
					{
						Alert.show("起始学工号与终止学工号的位数必须相同。", "批量创建用户失败");
						return;
					}
					var digits:String = "0123456789";
					var isDigit:Boolean;
					var i:int;
					var j:int;
					for(i = 0; i < startTI.text.length; i++)
					{
						isDigit = false;
						for (j = 0; j <= 9; j++)
						{
							if (startTI.text.charAt(i) == digits.charAt(j))
							{
								isDigit = true;
								break;
							}
						}
						if (!isDigit)
						{
							Alert.show("起始学工号中包含非数字的字符。", "批量创建用户失败");
							return;
						}
					}
					for(i = 0; i < endTI.text.length; i++)
					{
						isDigit = false;
						for (j = 0; j <= 9; j++)
						{
							if (endTI.text.charAt(i) == digits.charAt(j))
							{
								isDigit = true;
								break;
							}
						}
						if (!isDigit)
						{
							Alert.show("终止学工号中包含非数字的字符。", "批量创建用户失败");
							return;
						}
					}
					var numLength:int = startTI.text.length;
					var startNumString:String = "";
					var endNumString:String = "";
					var startNum:int;
					var endNum:int;
					var foundBegin:Boolean = false;
					for (i = 0; i < startTI.text.length; i++)
					{
						if (!foundBegin)
						{
							if (startTI.text.charAt(i) != "0")
							{
								foundBegin = true;
							}
							else
							{
								continue;
							}
						}
						startNumString += startTI.text.charAt(i);
					}
					foundBegin = false;
					for (i = 0; i < endTI.text.length; i++)
					{
						if (!foundBegin)
						{
							if (endTI.text.charAt(i) != "0")
							{
								foundBegin = true;
							}
							else
							{
								continue;
							}
						}
						endNumString += endTI.text.charAt(i);
					}
					startNum = int(startNumString);
					endNum = int(endNumString);
					if (endNum < startNum)
					{
						Alert.show("终止学工号必须大于或等于起始学工号。", "批量创建用户失败");
						return;
					}
					var diff:int;
					diff = endNum - startNum + 1;
					if (diff > 2000)
					{
						Alert.show("一次最多能批量创建2000个用户。", "批量创建用户失败");
						return;
					}
					var officialId:String = "";
					var officialIdEnd:String = "";
					var k:int;
					for (i = startNum; i <= endNum; i++)
					{
						officialId = "";
						officialIdEnd = i.toString();
						diff = numLength - officialIdEnd.length;
						for (k = 1; k <= diff; k++)
						{
							officialId += "0";
						}
						officialId += officialIdEnd;
						var user:User = new User();
						user.officialId = officialId;
						user.lastName = "(未";
						user.firstName = "命名)";
						user.login = officialId;
						user.email = officialId + "@iask.com";
						user.password = officialId;
						user.isTeacher = isTeacherBatchCB.selected;
						CairngormUtils.dispatchEvent(EventNames.CREATE_USER, user);
					}
				}
				else
				{
					passwordValidator.enabled = true;
					passwordConfirmationValidator.enabled = true;
					var results:Array = Validator.validateAll(
					[officialIdValidator, usernameValidator, emailValidator, lastNameValidator, firstNameValidator,
					 passwordValidator, passwordConfirmationValidator]);
					if (results.length > 0)
					{
						Alert.show("请改正表单上用红色线框标出的错误。", "创建用户失败");
						return;
					}
					createAccountButton.setFocus();
					CursorManager.setBusyCursor();
					var user:User = new User(officialIdTI.text, loginTI.text, emailTI.text, 
											lastNameTI.text, firstNameTI.text, isTeacherCB.selected, 
											passwordTI.text, 0, 0, notesTI.text);
					passwordValidator.enabled = false;
					passwordConfirmationValidator.enabled = false;
					passwordTI.text = "";
					confirmPasswordTI.text = "";
				    CairngormUtils.dispatchEvent(EventNames.CREATE_USER, user);
			 	}
			}
		]]>
	</mx:Script>
	<mx:StringValidator id="officialIdValidator" source="{officialIdTI}" property="text"
	   required="true" minLength="3" maxLength="40" />
	<mx:EmailValidator id="emailValidator" source="{emailTI}" property="text"/>
	<mx:StringValidator id="usernameValidator" source="{loginTI}" property="text"
	   required="true" minLength="3" maxLength="80" />
	<mx:StringValidator id="lastNameValidator" source="{lastNameTI}" property="text"
	   required="true" minLength="1" maxLength="80" />
	<mx:StringValidator id="firstNameValidator" source="{firstNameTI}" property="text"
	   required="true" minLength="1" maxLength="80" />
	<mx:StringValidator id="passwordValidator" source="{passwordTI}" property="text"
	   required="true" minLength="4" maxLength="40" />
	<cpv:PasswordConfirmationValidator id="passwordConfirmationValidator"
	   password="{passwordTI.text}" source="{confirmPasswordTI}" 
	   property="text" required="true"/>
	<cpv:ServerErrorValidator id="officialIdSV" field="official_id" listener="{officialIdTI}" 
		serverErrors="{_model.accountCreateErrors}"/>
	<cpv:ServerErrorValidator id="loginSV" field="login" listener="{loginTI}" 
		serverErrors="{_model.accountCreateErrors}"/>
	<cpv:ServerErrorValidator id="emailSV" field="email" listener="{emailTI}" 
		serverErrors="{_model.accountCreateErrors}"/>
	<cpv:ServerErrorValidator id="lastNameSV" field="last_name" listener="{lastNameTI}" 
		serverErrors="{_model.accountCreateErrors}"/>
	<cpv:ServerErrorValidator id="firstNameSV" field="first_name" listener="{firstNameTI}" 
		serverErrors="{_model.accountCreateErrors}"/>
	<cpv:ServerErrorValidator id="passwordSV" field="password" listener="{passwordTI}" 
		serverErrors="{_model.accountCreateErrors}"/>
	<cpv:ServerErrorValidator id="passwordConfirmationSV" field="password_confirmation" 
		listener="{confirmPasswordTI}" serverErrors="{_model.accountCreateErrors}"/>
	<mx:CheckBox id="batchCB" label="批量新建用户(学工号必须是连续号码)" toolTip="这一功能将批量创建从指定的起始学工号到终止学工号所对应的用户（例如：从040648到040699，学工号必须只包含数字，并且起始和终止学工号的位数要相同），每个用户的用户名，密码都为其学工号。"/>
	<mx:Form labelWidth="80">
		<mx:FormItem required="true" label="起始学工号">
			<mx:TextInput id="startTI" enabled="{batchCB.selected}"/>
		</mx:FormItem>
		<mx:FormItem required="true" label="终止学工号">
			<mx:TextInput id="endTI" enabled="{batchCB.selected}"/>
		</mx:FormItem>
		<mx:FormItem>
			<mx:CheckBox id="isTeacherBatchCB" label="教师" enabled="{batchCB.selected}"/>
		</mx:FormItem>
		<mx:FormItem/>
		<mx:FormItem required="true" label="学工号">
			<mx:TextInput id="officialIdTI" enabled="{!batchCB.selected}"/>
		</mx:FormItem>
		<mx:FormItem required="true" label="用户名">
			<mx:TextInput id="loginTI" enabled="{!batchCB.selected}"/>
		</mx:FormItem>
		<mx:FormItem required="true" label="密码">
			<mx:TextInput id="passwordTI" displayAsPassword="true" enabled="{!batchCB.selected}"/>
		</mx:FormItem>
		<mx:FormItem required="true" label="确认密码">
			<mx:TextInput id="confirmPasswordTI" displayAsPassword="true" enter="validateAndSubmit()"
			    enabled="{!batchCB.selected}"/>
		</mx:FormItem>
		<mx:FormItem required="true" label="电子邮件">
			<mx:TextInput id="emailTI" enabled="{!batchCB.selected}"/>
		</mx:FormItem>
		<mx:FormItem required="true" label="姓氏">
			<mx:TextInput id="lastNameTI" enabled="{!batchCB.selected}"/>
		</mx:FormItem>
		<mx:FormItem required="true" label="名字">
			<mx:TextInput id="firstNameTI" enabled="{!batchCB.selected}"/>
		</mx:FormItem>
		<mx:FormItem label="备注">
			<mx:TextArea id="notesTI"  height="60" enabled="{!batchCB.selected}"/>
		</mx:FormItem>
		<mx:FormItem>
			<mx:CheckBox id="isTeacherCB" label="教师" enabled="{!batchCB.selected}"/>
		</mx:FormItem>
		<mx:FormItem>
			<mx:Button id="createAccountButton" label="创建用户"
				click="validateAndSubmit()" width="160" height="25"/>
		</mx:FormItem>
	</mx:Form>
</mx:TitleWindow>
